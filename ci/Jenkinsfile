pipeline {
  agent any
  environment {
    IMAGE_NAME = "demo-app:dev"          // or your param
    SEVERITY   = "HIGH,CRITICAL"
  }
  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Docker availability') {
      steps {
        sh 'which docker && docker version && echo "âœ… Docker reachable"'
      }
    }

    stage('Build image') {
      steps {
        sh '''
          echo "Building ${IMAGE_NAME}"
          docker build -t ${IMAGE_NAME} .
        '''
      }
    }

    stage('Scan (Trivy) -> raw JSON') {
      steps {
        sh '''
          # Use containerized Trivy (no install needed)
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$PWD":/work \
            aquasec/trivy:latest image \
              --severity "${SEVERITY}" \
              --format json \
              "${IMAGE_NAME}" \
            > demo-app.json

          ls -l demo-app.json
        '''
        archiveArtifacts artifacts: 'demo-app.json', fingerprint: true
      }
    }

    stage('Generate filtered JSON + HTML') {
      steps {
        sh '''
          python3 --version
          pip3 install -r requirements.txt
          # run your processing script (adjust path/name)
          python3 scanner/scan.py --input demo-app.json --out-json filtered.json --out-html report.html
        '''
        archiveArtifacts artifacts: 'filtered.json,report.html', fingerprint: true
      }
    }

    // keep your email/slack gate stage after this
  }
  post {
    always {
      archiveArtifacts artifacts: '**/*.log', allowEmptyArchive: true
    }
  }
}
